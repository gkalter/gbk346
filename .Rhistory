b6 <- DF[DF$grp == "E"/ c("a", "b")], DF[DF$grp == "E"/ c("c")],
b1 <- mycalc_function(DF[1,1], DF[1,2], "multiply")
b2 <- mycalc_function(DF[1:10, 1:3], DF[1:10, 1:3], "multiply")
b3 <- mycalc_function(DF[DF$grp == "E", c("a", "b")], DF[DF$grp == "E", c("c")], "divide")
b4 <- (DF[1,1] * DF[1,2])
b5 <- DF[1:10, 1:3] * DF[1:10, 1:3]
b6 <- DF[DF$grp == "E"/ c("a", "b")], DF[DF$grp == "E"/ c("c")]
b1 <- mycalc_function(DF[1,1], DF[1,2], "multiply")
b2 <- mycalc_function(DF[1:10, 1:3], DF[1:10, 1:3], "multiply")
b3 <- mycalc_function(DF[DF$grp == "E", c("a", "b")], DF[DF$grp == "E", c("c")], "divide")
b4 <- (DF[1,1] * DF[1,2])
b5 <- DF[1:10, 1:3] * DF[1:10, 1:3]
b6 <- DF[DF$grp == "E", c("a", "b")] / DF[DF$grp == "E", c("c")]
b1 <- mycalc_function(DF[1,1], DF[1,2], "multiply")
b2 <- mycalc_function(DF[1:10, 1:3], DF[1:10, 1:3], "multiply")
b3 <- mycalc_function(DF[DF$grp == "E", c("a", "b")], DF[DF$grp == "E", c("c")], "divide")
b4 <- (DF[1,1] * DF[1,2])
b5 <- DF[1:10, 1:3] * DF[1:10, 1:3]
b6 <- DF[DF$grp == "E", c("a", "b")] / DF[DF$grp == "E", c("c")]
b6
browseVignettes("geospaar")
devtools::document()
devtools::document()
devtools::install()
browseVignettes("gbk346")
`rm(list = c("mycalc_function"))`
`rm(list = c("mycalc_function"))`
`rm(list = c("mycalc_function"))
rm(list = c("mycalc_function"))
`rm(list = c("mycalc_function"))
browseVignettes("gbk346")
devtools::install
devtools::install_github()
devtools::install_github("gbk346")
devtools::install_github("https://github.com/agroimpacts/gbk346.git")
devtools::install_github("gbk346")
devtools:install_github(build_vignettes = TRUE)
devtools::document()
rm(list = c("mycalc_function"))
devtools::document()
devtools::install(build_vignettes = TRUE)
browseVignettes("gbk346")
m1 <- cbind(v1, v2)
m1
m2 <- cbind(v2, v3)
m2
m3 <- cbind(v3, v4)
m3
str(DF)
DF <- data.frame(v1, v2, v3, v4)
colnames(DF) <- c("a", "b", "c", grp)
DF
str(DF)
DF <- data.frame(v1, v2, v3, v4)
colnames(DF) <- c("a", "b", "c", "grp")
DF
str(DF)
devtools::document()
devtools::install(build_vignettes = TRUE)
browseVignettes("gbk346")
browseVignettes("gbk346")
browseVignettes("gbk346")
set.seed(1)
b <- 1:sample(1:10000, 1)
b[length(b)]
set.seed(1)
b <- 1:sample(1:10000, 1)
b[length(b)]
b
a[c(1, 2, 10)]
a
set.seed(10)
V4 <- sample(letters[1:5], size = 10, replace = TRUE)
dat <- data.frame(V1, V2, V3, V4)
set.seed(10)
V4 <-
dat <- data.frame(V1, V2, V3,
V4 = sample(letters[1:5], size = 10, replace = TRUE)
stringsAsFactors = FALSE)
set.seed(10)
a <- sample(1:20, 10, replace = TRUE)
names(a) <- paste0("V1", 1:10)
names(a) <- paste("V1", 1:10, sep = "")
b <- letters[a]
d <- rnorm(n = 10, mean = 100, sd = 20)
l <- list("a" = a, "b" = b, "d" = d)
l
set.seed(10)
m <- cbind(V1 = 1:10,
V2 = sample(1:100, size = 10, replace = TRUE),
V3 = runif(n = 10, min = 0, max = 50))
str(m)
dat <- data.frame(m, V4 = sample(letters[1:5], size = 10, replace = TRUE))
dat
set.seed(1)
b <- 1:sample(1:10000, 1)
b[length(b)]
a[c(1, 2, 10)]
set.seed(10)
a <- sample(1:20, 10, replace = TRUE)
names(a) <- paste0("V", 1:10)
b <- letters[a]
d <- rnorm(n = 10, mean = 100, sd = 20)
l <- list("a" = a, "b" = b, "d" = d)
a[c(1, 2, 10)]
a[1:3]
a[c("V1", "V2", "V3")]
a[length(a-1)] <- "sasquatch"
a
a[length(a) - 1] <- "sasquatch"
sasquatch
a
a[length(a) - 1] <- "sasquatch"
a
set.seed(10)
a <- sample(1:20, 10, replace = TRUE)
names(a) <- paste0("V", 1:10)
b <- letters[a]
d <- rnorm(n = 10, mean = 100, sd = 20)
l <- list("a" = a, "b" = b, "d" = d)
a
a[length(a) - 1] <- "sasquatch"
a
b %in% c("k", "n", "e")
b[b%in% c("k", "n", "e")]
b[b%in% c("k", "n", "e")]
b[b%in% c("k", "h", "g")]
which(b%in% c("k", "h", "g"))
d[1:length(d[5])]*d[length(d)-5: length(d)]
d[1:5] * d[length(d) - 4: length(d)]
d[1:5] * d[(length(d) - 4): length(d)]
d[d>100]
d[d>100]
length(d[d>100])
d[d>100]
length(d[d>100])
d%in% >100
d[d>100]
length(d[d>100])
which(d>100)
d
l$d
d[d > 90 & d < 110] <- 100
l$d
l[[3]]
d[d > 90 & d < 110] <- 100
m[length(m) - 1]
m[length(m)]
m[nrow(m), ncol(m)]
m[3, 1:2] <-  m[3, 1:2] * 10
m[3, 1:2]
m[3, 1:2] <-  m[3, 1:2] * 10
m[3, 1:2] <-  m[3, 1:2] / 10
m[3, 1:2]
m[3, 1:2] <-  m[3, 1:2] * 10
m[3, 1:2] <-  m[3, 1:2] / 10
m[3, 1:2]
m
m[3, 1:2] <-  m[3, 1:2] * 10
m[3, 1:2] <-  m[3, 1:2] / 10
m[3, 1:2]
m[3, c("V1", "V2")] <-  m[3, "V1", "V2"] * 10
m[3, 1:2] <-  m[3, 1:2] / 10
m[3, c("V1", "V2")] <-  m[3, c("V1", "V2")] * 10
m[3, 1:2] <-  m[3, 1:2] / 10
m[3, c("V1", "V2")] <-  m[3, c("V1", "V2")] * 10
m[3, c("V1", "V2")] <- m[3, c("V1", "V2")] / 10 # reset
m[3, c("V1", "V2")]
rowsum(m)
colSums(m)
colSums(dat)
rowSums(m)
colSums(m)
rowSums(dat[, 1:3])
colSums(dat[, 1:3])
sum(m)
mean(m)
sum(dat[, 1:3])
sum(m)
mean(m)
sum(dat[, 1:3])
mean(unlist(dat[, 1:3]))
library(dplyr)
library(dyplr)
dat %>% group_by(V4) %>%
summarize(V1 = mean(V1), V2 = mean(V2), V3 = mean(V3))
aggregate(dat[, 1:3], by = list(dat$V4), FUN = mean)
changer(path, module 1, check_validity = TRUE, change_git = TRUE,
run_roxygen = FALSE, remote_name = NULL, ask = TRUE)
set.seed(100)
m1 <- cbind(V1 = 1:20, V2 = sample(1:100, size = 20, replace = TRUE),
V3 = rnorm(n = 20, mean = 500, sd = 100))
set.seed(200)
m2 <- cbind(V1 = 1:20, V2 = sample(1:100, size = 20, replace = TRUE),
V3 = rnorm(n = 20, mean = 500, sd = 100))
set.seed(300)
m3 <- cbind(V1 = 1:20, V2 = sample(1:100, size = 20, replace = TRUE),
V3 = rnorm(n = 20, mean = 500, sd = 100))
set.seed(1)
v <- sample(LETTERS[1:5], size = 20, replace = TRUE)
dat1 <- data.frame(m1, "GRP" = v)
dat2 <- data.frame(m2, "GRP" = v)
l <- list(m1, m2, m3, dat1, dat2, v)
names(l) <- c("m1", "m2", "m3", "dat1", "dat2", "v")
set.seed(100)
m1 <- cbind(V1 = 1:20, V2 = sample(1:100, size = 20, replace = TRUE),
V3 = rnorm(n = 20, mean = 500, sd = 100))
set.seed(200)
m2 <- cbind(V1 = 1:20, V2 = sample(1:100, size = 20, replace = TRUE),
V3 = rnorm(n = 20, mean = 500, sd = 100))
set.seed(300)
m3 <- cbind(V1 = 1:20, V2 = sample(1:100, size = 20, replace = TRUE),
V3 = rnorm(n = 20, mean = 500, sd = 100))
set.seed(1)
v <- sample(LETTERS[1:5], size = 20, replace = TRUE)
dat1 <- data.frame(m1, "GRP" = v)
dat2 <- data.frame(m2, "GRP" = v)
l <- list(m1, m2, m3, dat1, dat2, v)
names(l) <- c("m1", "m2", "m3", "dat1", "dat2", "v")
l
rowSums(m1)
colSums(m1)
rowSums(dat1)
colSums(dat1)
rowSums(m1)
colSums(m1)
rowSums(dat1[, 1:3])
colSums(dat1[, 1:3])
rowSums(m1)
colSums(m1)
rowSums(dat1[, 1:3])
colSums(dat1[, 1:3])
rowsum(dat1[, 1:3], group = dat1$GRP)
sum(dat1[dat1$GRP == "A", "V1"])
browseVignettes("geospaar")
rowSums(m1)
colSums(m1)
rowSums(dat1[, 1:3])
colSums(dat1[, 1:3])
rowsum(dat1[, 1:3], group = dat1$GRP)
sum(dat1[dat1$GRP == "A", "V1"])
sum(dat1[dat1$GRP == "A", "V2"])
sum(dat1[dat1$GRP == "A", "V3"])
mean(m2)
mean(m2)
sum(m2)
mean(m2)
sum(m2)
mean(unlist(dat2[, -4]))
mean(m2)
sum(m2)
mean(unlist(dat2[, -4]))
sum(dat2[, -4])
library(dyplr)
dat1 %>%  group_by(GRP) #command shift m!!!
library(dbplyr)
library(dyplr)
dat1 %>%  group_by(GRP) #command shift m!!!
library(dplyr)
dat1 %>%  group_by(GRP) #command shift m!!!
library(dplyr)
dat1 %>%  group_by(GRP) %>%  summarise(V1 = mean(V1))#command shift m!!!
library(dplyr)
dat1 %>%  group_by(GRP) %>%
summarise(V1 = mean(V1), V2 = mean(V2), V3 = mean(V3))#command shift m!!!
library(dplyr)
dat1 %>%  group_by(GRP) %>%
summarise(V1 = mean(V1), V2 = mean(V2), V3 = mean(V3))#command shift m!!!
dat1 %>%  group_by(GRP) %>%
summarise(V1 = sum(V1), V2 = sum(V2), V3 = sum(V3))#
library(dplyr)
dat1 %>%  group_by(GRP) %>%
summarise(V1 = mean(V1), V2 = mean(V2), V3 = mean(V3))#command shift m!!!
dat1 %>%  group_by(GRP) %>%
summarise(V1 = sum(V1), V2 = sum(V2), V3 = sum (V3))
dat1 %>%  group_by(GRP) %>%
summarise_all(mean)
library(dplyr)
dat1 %>%  group_by(GRP) %>%
summarise(V1 = mean(V1), V2 = mean(V2), V3 = mean(V3))#command shift m!!!
dat1 %>%  group_by(GRP) %>%
summarise(V1 = sum(V1), V2 = sum(V2), V3 = sum (V3))
dat1 %>%  group_by(GRP) %>%  summarise_all(mean)
dat1 %>%  group_by(GRP) %>%  summarise_all(sum)
a <- 5
if(a > 10) {
print("Greater than 10!")
} else {
print("Less than or equal to 10")
}
if(a > 10) print("Greater than 10")
a <- 11
if(a > 10) print("Greater than 10")
{
print("Hello!")
}
a <- 10
if(a > 10) {
print("Greater than 10")
} else {
print("Hello!")
}
a <- 10
if(a > 10) {
print("Greater than 10")
} else {
print("Hello!")
}
a <- 10
if(a > 10) {
print("Greater than 10")
} else if(a > 5 & a <= 10) {
print("Intermediate")
} else {
print("Less than 6")
}
a <- 1
if(a > 10) {
print("Greater than 10")
} else if(a > 5 & a <= 10) {
print("Intermediate")
} else {
print("Less than 6")
}
ifelse(a > 5, "Greater than 5", a)
ifelse(a > 5, "Greater than 5", a)
a <- 10
if(a > 10) {
print("Greater than 10")
} else {
print("Hello!")
}
# not vectorized
a <- 1:10
if(a > 10) {
print("Greater than 10")
} else if(a > 5 & a <= 10) {
print("Intermediate")
} else {
print("Less than 6")
}
ifelse(a > 5, "Greater than 5", a)
b <- 1:3
b
for(i in b) print(i)
b <- c("a", "d", "b")
for(i in b) print(i)
i
b <- c("a", "d", "c")
for(i in b) print(i)
i
v <-  1:100
for(i in 1:length(v)) {
if(v[i] > 50 & v[i] < 70) {
v[i] <- 0
}
}
print(v) # need this to see output
browseVignettes("geospaar")
set.seed(100)
m1 <- cbind(V1 = 1:20, V2 = sample(1:100, size = 20, replace = TRUE),
V3 = rnorm(n = 20, mean = 500, sd = 100))
set.seed(200)
m2 <- cbind(V1 = 1:20, V2 = sample(1:100, size = 20, replace = TRUE),
V3 = rnorm(n = 20, mean = 500, sd = 100))
set.seed(300)
m3 <- cbind(V1 = 1:20, V2 = sample(1:100, size = 20, replace = TRUE),
V3 = rnorm(n = 20, mean = 500, sd = 100))
set.seed(1)
v <- sample(LETTERS[1:5], size = 20, replace = TRUE)
dat1 <- data.frame(m1, "GRP" = v)
dat2 <- data.frame(m2, "GRP" = v)
l <- list(m1, m2, m3, dat1, dat2, v)
names(l) <- c("m1", "m2", "m3", "dat1", "dat2", "v")
length(l)
lapply(1[[1:5]], colMeans)
length(l)
lapply(1[1:5], colMeans)
length(l)
lapply(1[1:5], function(x) colMeans(x[, 1:3]))
length(l)
lapply(1[1:5], function(x) colMeans(x[, 1:3]))
readr::read_csv(dummy_data.csv)
tb_df <- readr::read_csv("/Users/garrenkalter/Desktop/gbk346/Class\ Notes/dummy_data.csv")
tb_df %>% distinct(group)
tb_df %>% distinct(group)
tb_df %>% distinct(element)
tb_df %>% distinct(group, element)
tb_df <- readr::read_csv("/Users/garrenkalter/Desktop/gbk346/Class\ Notes/dummy_data.csv")
tb_df %>% distinct(group)
tb_df %>% distinct(element)
tb_df %>% distinct(group, element)
browseVignettes("geospaar")
t1 <- tibble([1:10, V1 = c("G1, G2, G3, G4, G5, G6, G7, G8, G9, G10")])
t1 <- tibble(1:10, V1 = c("G1, G2, G3, G4, G5, G6, G7, G8, G9, G10"))
t2 <- tibble(a = sample(1:10), b = rnorm(10))
t3 <- tibble(a = sample(1:10), b = rnorm(10))
t1 <- tibble::add_row(1:10)
library(dplyr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggplot2)
t2 <- tibble(a = sample(1:10), b = rnorm(10))
t1 <- tibble([1:10, V1 = c("G1", "G2", "G3", "G4", "G5", "G6", "G7", "G8", "G9", "G10")])
t1 <- tibble([1:10, V1 = c("G1", "G2", "G3", "G4", "G5", "G6", "G7", "G8", "G9", "G10")])
t2 <- tibble(a = sample(1:10), b = rnorm(10))
t3 <- tibble(a = sample(1:10), b = rnorm(10))
t1 <- tibble([1:10, V1 = G1:G10])
t2 <- tibble(a = sample(1:10), b = rnorm(10))
t3 <- tibble(a = sample(1:10), b = rnorm(10))
t1 <- tibble(V1 = G1:G10)
t2 <- tibble(a = sample(1:10), b = rnorm(10))
t3 <- tibble(a = sample(1:10), b = rnorm(10))
t1 <- tibble(V1 = G1:G10, V2 = runif(>75 & <125))
t2 <- tibble(a = sample(1:10), b = rnorm(10))
t3 <- tibble(a = sample(1:10), b = rnorm(10))
tibble?
t1 <- tibble(rows = 1:10, `colnames<-`(V1, G1))
t1 <- tibble(V1 = c("G1", "G2", "G3"))
t1 <- tibble(V1 = c("G1", "G2", "G3", "G4", "G5", "G6", "G7", "G8", "G9", "G10"))
t2 <- tibble(a = sample(1:10), b = rnorm(10))
t3 <- tibble(a = sample(1:10), b = rnorm(10))
t1 <- tibble(V1 = c("G1", "G2", "G3", "G4", "G5", "G6", "G7", "G8", "G9", "G10"), V2 = runif(75:125))
t2 <- tibble(a = sample(1:10), b = rnorm(10))
t3 <- tibble(a = sample(1:10), b = rnorm(10))
t1 <- tibble(V1 = c("G1", "G2", "G3", "G4", "G5", "G6", "G7", "G8", "G9", "G10"), V2 = runif(>75 & <125))
t2 <- tibble(a = sample(1:10), b = rnorm(10))
t3 <- tibble(a = sample(1:10), b = rnorm(10))
t1 <- tibble(V1 = paste0("G", 1:10) )
t1 <- tibble(V1 = paste0("G", 1:10), V2 = runif(75, 125) )
t1 <- tibble(V1 = paste0("G", 1:10), V2 = runif(10, 75, 125))
t1
t2 <- tibble(v1 = paste0("G", 1:15), v3 = sample(LETTERS(1:6)))
t2 <- tibble(v1 = paste0("G", 1:15), v3 = LETTERS(sample(1:6, 10)))
t2 <- tibble(v1 = paste0("G", 1:15), v3 = LETTERS[sample(1:6, 10)])
t2 <- tibble(v1 = paste0("G", 1:15), v3 = LETTERS[sample(1:6, 10, replace = TRUE)])
t2 <- tibble(v1 = paste0("G", 1:15), v3 = LETTERS[sample(1:6, 15, replace = TRUE)])
t2
t3 <- tibble(v1 = paste0("G", 1:20), v4 = rbinom(mean(100), sd = 20))
t1 <- tibble(V1 = paste0("G", 1:10), V2 = runif(10, 75, 125))
t1
t2 <- tibble(v1 = paste0("G", 1:15), v3 = LETTERS[sample(1:6, 15, replace = TRUE)])
t2
set.seed(1)
t3 <- tibble(v1 = paste0("G", 1:20), v4 = rnorm(20, mean = 100, sd = 20))
t3
left_join(x = t1, y = t2, z = t3)
full_join(t1, t2) %>% full_join(., t3)
full_join(t1) %>% full_join(., t2) %>% full_join(., t3)
left_join(x = t1, y = t2, z = t3, by = "v1")
left_join(x = t2, y = t3, by = "v1")
?dplyr::join
build_vignettes = TRUE
left_join(x = t2, y = t3, by = "v1", "V1")
left_join(x = t2, y = t3, by = "v1")
left_join(x = t2, y = t3, z = t1,  by = "v1", "V1")
left_join(t2, t3, t1, by = c("v1", "V1"))
left_join(t2, t3, t1)
library(geospaar)
fs <- dir(system.file("extdata/", package = "geospaar"),
pattern = "FAOSTAT", full.names = TRUE)
crops <- lapply(fs, readr::read_csv)
fs <- dir(system.file("extdata/", package = "geospaar"),
pattern = "FAOSTAT", full.names = TRUE)
crops <- lapply(fs, readr::read_csv)
crops_df <- do.call(rbind, lapply(crops, function(x) {
x %>% dplyr::select(Item, Area, Element, Year, Value) %>%
pivot_wider(names_from = Element, values_from = Value) %>%
rename(crop = Item, country = Area, year = Year,
harv_area = `Area harvested`, prod = Production)
crop_ylds <- crops_df %>% mutate(yield = prod / harv_area)
crop_ylds
crop_ylds <- crop_ylds %>%
mutate(country = ifelse(country == "South Africa", "ZAF", country)) %>%
mutate(country = ifelse(country == "Zambia", "ZMB", country)) %>%
mutate(crop = tolower(crop))
set.seed(1)
crop_ylds %>% sample_n(5)
?verbs
?verbs
?verbs::dplyr
?dplyr
crop_ylds %>% arrange(desc(harv_area))
crop_ylds
browseVignettes("geospaar")
browseVignettes("geospaar")
browseVignettes("geospaar")
browseVignettes("geospaar")
browseVignettes(geospaar)
fs <- dir(system.file("extdata/", package = "geospaar"),
pattern = "FAOSTAT", full.names = TRUE)
crops <- lapply(fs, readr::read_csv)
crops_df <- do.call(rbind, lapply(crops, function(x) {
x %>% dplyr::select(Item, Area, Element, Year, Value) %>%
pivot_wider(names_from = Element, values_from = Value) %>%
rename(crop = Item, country = Area, year = Year,
harv_area = `Area harvested`, prod = Production)
crop_ylds <- crops_df %>% mutate(yield = prod / harv_area)
crop_ylds
crop_ylds <- crop_ylds %>%
mutate(country = ifelse(country == "South Africa", "ZAF", country)) %>%
mutate(country = ifelse(country == "Zambia", "ZMB", country)) %>%
mutate(crop = tolower(crop))
set.seed(1)
crop_ylds %>% sample_n(5)
browseVignettes("geospaar")
browseVignettes("geospaar")
detach("package:geospaar", unload = TRUE)
browseVignettes("geospaar")
library(geospaar)
